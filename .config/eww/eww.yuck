;; (defwindow xmonad-bar
;;   :monitor 0
;;   :stacking "fg"
;;   :namespace "bar"
;;   :exclusive true
;;   :geometry (geometry
;;     :x "0%"
;;     :y "5px"
;;     :width "99%"
;;     :height "20px"
;;     :anchor "top center"
;; 	:reserve (struts :distance "0px" :side "top")
;; 	:wm-ignore "false"
;;   )
(defwindow xmonad-bar
           :monitor 0
           :geometry (geometry :x "0%"
                               :y "5px"
                               :width "99.25%" ;so that it matches the gaps of the windows on my stuff 
                               :height "10px"
                               :anchor "top center")
           :stacking "fg"
           :reserve (struts :distance "35px" :side "top")
           :windowtype "dock"
           :wm-ignore false
  (centerbox
    :orientation "h"
    :class "container"
	:anchor "left"

    (Left)
    (Center)
    (Right)
  )

)  
(defwidget Left []
	(box
		:halighn "start"
		(ws)
	)
)


(defwidget Center []
    (box
	   :halign "center"


))



   
(defwidget Right []
  (box
    :halign "end"
    :space-evenly false

     (systray
      ;; :class "systray"
      :orientation "h"
      :icon-size 16
      :space-evenly true
      :spacing 8
    )
	 ; apparently having a system tray was this fucking easy but no one told me so it took me 6 months to find a config that openly just had this ^
	(systop

      :orientation "h"
      :icon-size 16
      :space-evenly true
      :spacing 8
)

  )
)

(defwidget ws []
      (box
        :halign "start"
        :valign "center"
        (literal :content WS))
      ) 

(deflisten WS :initial "(box (label :text 'init'))"
  `scripts/ws`)

(defwidget systop []
	(box :orientation "h"
		 :space-evenly false
		 :spacing 5
		 :halign "end"
		 (label :text proc :tooltip cput)	
		 (label :text memp :tooltip mem)	
		 (label :text date)	
		 (label :text time)	
		 ;; (label :text bat)	
))
	

(defpoll time :interval "1s"
	"scripts/time")

(defpoll date :interval "600s"
	"scripts/date")

(defpoll proc :interval "1s"
    "scripts/cpu")

(defpoll cput :interval "10s"
    "scripts/cput")

(defpoll mem :interval "1s"
	"scripts/mem")

(defpoll memp :interval "1s"
	"scripts/memp")

(defpoll bat :interval "1s"
	"scripts/bat")
