(defwindow xmonad-bar
           :monitor 0
           :geometry (geometry :x "0%"
                               :y "5px"
                               :width "99.25%" ;so that it matches the gaps of the windows on my stuff 
                               :height "10px"
                               :anchor "top center")
           :stacking "bt"
           :reserve (struts :distance "40px" :side "top")
           :windowtype "dock"
           :wm-ignore false
  (centerbox
    :orientation "h"
    :class "container"
	:anchor "left"

    (Left)
    (Center)
    (Right)
  )

)  



(defwindow hypr-bar
           :monitor 0
           :geometry (geometry :x "0%"
                               :y "5px"
                               :width "99.5%" ;so that it matches the gaps of the windows on my stuff 
                               :height "9px"
                               :anchor "top center")
		   :namespace "bar"
		   :exclusive "true"
  (centerbox
    :orientation "h"
    :class "container"
	:anchor "left"

    (Lefthypr)
    (Center)
    (Right)
  )

)  


(defwidget Left []
	(box
		:halighn "start"
		(ws)
	)
)

(defwidget Lefthypr []
	(box
		:halighn "start"
		(workspaces0)
	)
)

(defwidget Center []
    (box
	   :halign "center"
	   (title)


))



   
(defwidget Right []
  (box
    :halign "end"
    :space-evenly false
		 (label :markup "<span font-weight=\"heavy\">[</span>")
     (systray :class "systray" :orientation "h" :icon-size 14 :space-evenly true :spacing 4)
		 (label :markup "<span font-weight=\"heavy\">]</span>")
	 (systop)
  )
)

(defpoll workspace0 :interval "0.1s"
  "scripts/workspace.sh 0 &")

(defwidget workspaces0 []
  (literal :content workspace0))

(deflisten ws
  "scripts/ws")

(defwidget ws []
      (box
        :halign "start"
        :valign "center"
        (literal :content ws))
      ) 

(deflisten window :initial "..." "sh ~/.config/eww/scripts/get-window-title")
(defwidget title []
  (box
    (label :text "${window}"))
)   
  

(defwidget systop []
	(box :orientation "h"
		 :space-evenly false
		 :spacing 5
		 :halign "end"
		 (cpu)
		 (mem)
		 (Time)	
		 ;; (label :text bat)	
))
	





(defvar RUN_EWW "eww -c ~/.config/eww/")
(defvar SWAP_TIME_DATE 0)
(defvar SWAP_MEM 0)
(defvar TIME_ANIMATION "slideup")
(defpoll CPUP :interval "1s" "scripts/cpu")
(defpoll HOUR :interval "1s" "scripts/time_info --hour")
(defpoll MINUTES :interval "1s" "scripts/time_info --minutes")
(defpoll PM_OR_AM :interval "1s" "scripts/time_info --type")
(defpoll DATE :interval "1s" "scripts/time_info --date")
(defpoll mem :interval "1s" "scripts/mem")
(defpoll memp :interval "1s"	"scripts/memp")

;; (defpoll bat :interval "1s"
;; 	"scripts/bat")

(defwidget cpu []
   (eventbox
	 (label :markup "<span font-weight=\"heavy\">${CPUP}</span>")
))
(defwidget mem []
		   (eventbox :onhover "${RUN_EWW} update SWAP_MEM=1 TIME_ANIMATION='slidedown'" :onhoverlost "${RUN_EWW} update SWAP_MEM=0 TIME_ANIMATION='slideup'"
      (stack :selected SWAP_MEM :transition TIME_ANIMATION :class "mem" :same-size false
		 (label :markup "<span font-weight=\"heavy\">${memp}</span>" :tooltip mem)	
(label :markup "<span font-weight=\"heavy\">[${mem}]</span>" ))
))
(defwidget Time []
  (eventbox :onhover "${RUN_EWW} update SWAP_TIME_DATE=1 TIME_ANIMATION='slidedown'" :onhoverlost "${RUN_EWW} update SWAP_TIME_DATE=0 TIME_ANIMATION='slideup'"
    (button :onclick "${RUN_EWW} close calendar || ${RUN_EWW} open calendar"
      (stack :selected SWAP_TIME_DATE :transition TIME_ANIMATION :class "time" :same-size false
        (label :markup "<span font-weight=\"heavy\">[${HOUR}</span><span font-weight=\"heavy\">:${MINUTES}</span><span font-weight=\"heavy\"font-size=\"small\">${PM_OR_AM}</span><span font-weight=\"heavy\">]</span>")
        (label :markup "<span font-weight=\"heavy\">[${DATE}]</span>" )))))

;;POPUP CALENDAR WINDOW
(defwindow calendar
  :monitor 0
  :geometry (geometry :anchor "top right" :y 10 :x 10 :width 300 :height 100 )
  :stacking "fg"
  :windowtype "normal"
  (box :class "popup-window" :orientation "h" :valign "fill" :halign "fill"
    (calendar :show-details true :show-heading true :show-day-names true)))

