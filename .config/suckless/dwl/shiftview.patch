From 40f9140742277d0298988990264f4b6a738f8122 Mon Sep 17 00:00:00 2001
From: Guido Cella <guido@guidocella.xyz>
Date: Sat, 27 Jan 2024 22:43:29 +0100
Subject: [PATCH] cycle through tags

---
 config.def.h |  4 ++++
 shiftview.c  | 34 ++++++++++++++++++++++++++++++++++
 2 files changed, 38 insertions(+)
 create mode 100644 shiftview.c

diff --git a/config.def.h b/config.def.h
index 9009517..8d77ec0 100644
--- a/config.def.h
+++ b/config.def.h
@@ -117,6 +117,8 @@ static const enum libinput_config_tap_button_map button_map = LIBINPUT_CONFIG_TA
 static const char *termcmd[] = { "foot", NULL };
 static const char *menucmd[] = { "bemenu-run", NULL };
 
+#include "shiftview.c"
+
 static const Key keys[] = {
 	/* Note that Shift changes certain key codes: c -> C, 2 -> at, etc. */
 	/* modifier                  key                 function        argument */
@@ -130,6 +132,8 @@ static const Key keys[] = {
 	{ MODKEY,                    XKB_KEY_l,          setmfact,       {.f = +0.05f} },
 	{ MODKEY,                    XKB_KEY_Return,     zoom,           {0} },
 	{ MODKEY,                    XKB_KEY_Tab,        view,           {0} },
+	{ MODKEY,                    XKB_KEY_a,          shiftview,      { .i = -1 } },
+	{ MODKEY,                    XKB_KEY_semicolon,  shiftview,      { .i = 1 } },
 	{ MODKEY|WLR_MODIFIER_SHIFT, XKB_KEY_C,          killclient,     {0} },
 	{ MODKEY,                    XKB_KEY_t,          setlayout,      {.v = &layouts[0]} },
 	{ MODKEY,                    XKB_KEY_f,          setlayout,      {.v = &layouts[1]} },
diff --git a/shiftview.c b/shiftview.c
new file mode 100644
index 0000000..fa53db0
--- /dev/null
+++ b/shiftview.c
@@ -0,0 +1,34 @@
+// "arg->i" stores the number of tags to shift right (positive value)
+//          or left (negative value)
+void
+shiftview(const Arg *arg)
+{
+	Arg a;
+	Client *c;
+	bool visible = false;
+	int i = arg->i;
+	int count = 0;
+	int nextseltags, curseltags = selmon->tagset[selmon->seltags];
+
+	do {
+		if (i > 0) // left circular shift
+            nextseltags = (curseltags << i) | (curseltags >> (TAGCOUNT - i));
+        else // right circular shift
+			nextseltags = curseltags >> (-i) | (curseltags << (TAGCOUNT + i));
+
+        // Check if the tag is visible
+        wl_list_for_each(c, &clients, link) {
+            if (c->mon == selmon && nextseltags & c->tags) {
+                visible = true;
+                break;
+            }
+        }
+
+		i += arg->i;
+    } while (!visible && ++count <= TAGCOUNT);
+
+    if (count <= TAGCOUNT) {
+        a.i = nextseltags;
+        view(&a);
+    }
+}
-- 
2.43.0

